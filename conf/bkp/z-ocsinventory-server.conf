# Autor: Robson Vaamonde
# Edicao: Fabio Silva
# Facebook: facebook.com/ProcedimentosEmTI
# Facebook: facebook.com/BoraParaPratica
# YouTube: youtube.com/BoraParaPratica
# Data de criação: 31/05/2016
# Data de atualização: 31/12/2017
# Versão: 0.11
# Testado e homologado para a versão do Ubuntu Server 16.04 LTS x64
# Kernel >= 4.4.x

<IfModule mod_perl.c>
 
  # Versão do mod_perl que será utilizada >1.99
  PerlSetEnv OCS_MODPERL_VERSION 2

  # Configuração do Banco de Dados Master (Primário)
  PerlSetEnv OCS_DB_HOST localhost
  
  # Configuração da Porta de Conexão com o MySQL
  PerlSetEnv OCS_DB_PORT 3306
  
  # Nome do Banco de Dados
  PerlSetEnv OCS_DB_NAME ocsweb
  PerlSetEnv OCS_DB_LOCAL ocsweb
  
  # Nome do usuário de autenticação com o Banco de Dados
  PerlSetEnv OCS_DB_USER ocs
  
  # Senha do usuário de autenticação com o Banco de Dados
  PerlSetVar OCS_DB_PWD 123456
  
  # Caminho para o Log do OCS Server
  PerlSetEnv OCS_OPT_LOGPATH "/var/log/ocsinventory-server"
  
  # DBI verbosity
  PerlSetEnv OCS_OPT_DBI_PRINT_ERROR 0
  
  # Suporte ao Unicode
  PerlSetEnv OCS_OPT_UNICODE_SUPPORT 1

  # Endereço de Loopback do servidor primário
  PerlAddVar OCS_OPT_TRUSTED_IP 127.0.0.1
  
# ===== WEB SERVICE (SOAP) SETTINGS =====

  PerlSetEnv OCS_OPT_WEB_SERVICE_ENABLED 0
  PerlSetEnv OCS_OPT_WEB_SERVICE_RESULTS_LIMIT 100

  # Configure engine to use the settings from this file  
  PerlSetEnv OCS_OPT_OPTIONS_NOT_OVERLOADED 0

  # Try to use other compress algorithm than raw zlib
  PerlSetEnv OCS_OPT_COMPRESS_TRY_OTHERS 1
  
# ===== MAIN SETTINGS =====

  # Enable engine logs (see LOGPATH setting)
  PerlSetEnv OCS_OPT_LOGLEVEL 0
  
  # Specify agent's prolog frequency
  PerlSetEnv OCS_OPT_PROLOG_FREQ 12
  
  # Configure the duplicates detection system
  PerlSetEnv OCS_OPT_AUTO_DUPLICATE_LVL 15
  
  # Futur security improvements
  PerlSetEnv OCS_OPT_SECURITY_LEVEL 0
  
  # Validity of a computer's lock
  PerlSetEnv OCS_OPT_LOCK_REUSE_TIME 600
  
  # Enable the history tracking system (useful for external data synchronisation
  PerlSetEnv OCS_OPT_TRACE_DELETED 0
  
# ===== INVENTORY SETTINGS =====
  
  # Specify the validity of inventory data
  PerlSetEnv OCS_OPT_FREQUENCY 0  
  
  # Configure engine to update inventory regarding to CHECKSUM agent value (lower DB backend load)
  PerlSetEnv OCS_OPT_INVENTORY_DIFF 1
  
  # Make engine consider an inventory as a transaction (lower concurency, better disk usage)
  PerlSetEnv OCS_OPT_INVENTORY_TRANSACTION 1
  
  # Configure engine to make a differential update of inventory sections (row level). Lower DB backend load, higher frontend load
  PerlSetEnv OCS_OPT_INVENTORY_WRITE_DIFF 1
  
  # Enable some stuff to improve DB queries, especially for GUI multicriteria searching system
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_ENABLED 1
  
  # Specify when the engine will clean the inventory cache structures
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_REVALIDATE 7
  
  # Enable you to keep trace of every elements encountered in db life
  PerlSetEnv OCS_OPT_INVENTORY_CACHE_KEEP 1

# ===== SOFTWARES DEPLOYMENT SETTINGS =====

  # Enable this feature
  PerlSetEnv OCS_OPT_DOWNLOAD 0
  
  # Package which have a priority superior than this value will not be downloaded
  PerlSetEnv OCS_OPT_DOWNLOAD_PERIOD_LENGTH 10
  
  # Time between two download cycles (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_CYCLE_LATENCY 60
  
  # Time between two fragment downloads (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_FRAG_LATENCY 60
  
  # Specify if you want to track packages affected to a group on computer's level
  PerlSetEnv OCS_OPT_DOWNLOAD_GROUPS_TRACE_EVENTS 1
  
  # Time between two download periods (bandwidth control)
  PerlSetEnv OCS_OPT_DOWNLOAD_PERIOD_LATENCY 60
  
  # Agents will send ERR_TIMEOUT event and clean the package it is older than this setting
  PerlSetEnv OCS_OPT_DOWNLOAD_TIMEOUT 7
  
  # Agents will send an error event and clean the package if package command does not respond during this setting
  PerlSetEnv OCS_OPT_DOWNLOAD_EXECUTION_TIMEOUT 120
  
  # Enable ocs engine to deliver agent's files (deprecated)
  PerlSetEnv OCS_OPT_DEPLOY 0
  
# ===== GROUPS SETTINGS =====

  # Enable the computer\s groups feature
  PerlSetEnv OCS_OPT_ENABLE_GROUPS 1
  
  # Random number computed in the defined range. Designed to avoid computing many groups in the same process
  PerlSetEnv OCS_OPT_GROUPS_CACHE_OFFSET 43200
  
  # Specify the validity of computer's groups (default: compute it once a day - see offset)
  PerlSetEnv OCS_OPT_GROUPS_CACHE_REVALIDATE 43200
  
# ===== IPDISCOVER SETTINGS =====

  # Specify how much agent per LAN will discovered connected peripherals (0 to disable)
  PerlSetEnv OCS_OPT_IPDISCOVER 2
  
  # Specify the minimal difference to replace an ipdiscover agent
  PerlSetEnv OCS_OPT_IPDISCOVER_BETTER_THRESHOLD 1
  
  # Time between 2 arp requests (mini: 10 ms)
  PerlSetEnv OCS_OPT_IPDISCOVER_LATENCY 100
  
  # Specify when to remove a computer when it has not come until this period
  PerlSetEnv OCS_OPT_IPDISCOVER_MAX_ALIVE 14
  
  # Disable the time before a first election (not recommended)
  PerlSetEnv OCS_OPT_IPDISCOVER_NO_POSTPONE 0
  
  # Enable groups for ipdiscover (for example, you might want to prevent some groups to be ipdiscover agents)
  PerlSetEnv OCS_OPT_IPDISCOVER_USE_GROUPS 1
  
# ===== INVENTORY FILES MAPPING SETTINGS =====

  # Use with ocsinventory-injector, enable the multi entities feature
  PerlSetEnv OCS_OPT_GENERATE_OCS_FILES 0
  
  # Generate either compressed file or clear XML text
  PerlSetEnv OCS_OPT_OCS_FILES_FORMAT OCS
  
  # Specify if you want to keep trace of all inventory between to synchronisation with the higher level server
  PerlSetEnv OCS_OPT_OCS_FILES_OVERWRITE 0
  
  # Path to ocs files directory (must be writeable)
  PerlSetEnv OCS_OPT_OCS_FILES_PATH /tmp

# ===== FILTER SETTINGS =====

  # Enable prolog filter stack
  PerlSetEnv OCS_OPT_PROLOG_FILTER_ON 0
  
  # Enable core filter system to modify some things "on the fly"
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_ENABLED 0
  
  # Enable inventory flooding filter. A dedicated ipaddress ia allowed to send a new computer only once in this period
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_FLOOD_IP 0
  
  # Period definition for INVENTORY_FILTER_FLOOD_IP
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_FLOOD_IP_CACHE_TIME 300
  
  # Enable inventory filter stack
  PerlSetEnv OCS_OPT_INVENTORY_FILTER_ON 0

# ===== DATA FILTER =====

  #Enable the dat filtering capacity
  PerlSetEnv OCS_OPT_DATA_FILTER 0 

# ===== REGISTRY SETTINGS =====

  # Enable the registry capacity
  PerlSetEnv OCS_OPT_REGISTRY 1

# ===== SNMP SETTINGS =====

  # Enable the SNMP capacity
  PerlSetEnv OCS_OPT_SNMP 0
  
  # Configure engine to update snmp inventory regarding to snmp_laststate table (lower DB backend load)
  PerlSetEnv OCS_OPT_SNMP_INVENTORY_DIFF 1
  
  # Display error message about agent https communication in logfile
  PerlSetEnv OCS_OPT_SNMP_PRINT_HTTPS_ERROR 1
  
# ===== SESSION SETTINGS =====

  # Validity of a session (prolog=>postinventory)
  PerlSetEnv OCS_OPT_SESSION_VALIDITY_TIME 600
  
  # Consider a session obsolete if it is older thant this value
  PerlSetEnv OCS_OPT_SESSION_CLEAN_TIME 86400
  
  # Accept an inventory only if required by server
  PerlSetEnv OCS_OPT_INVENTORY_SESSION_ONLY 0

# ===== TAG =====

  # The default behavior of the server is to ignore TAG changes from the
  PerlSetEnv OCS_OPT_ACCEPT_TAG_UPDATE_FROM_CLIENT 0

# ===== EXTERNAL USERAGENTS =====

# ===== PLUGINS =====

  PerlSetEnv OCS_PLUGINS_PERL_DIR "/etc/ocsinventory-server/perl"
  PerlSetEnv OCS_PLUGINS_CONF_DIR "/etc/ocsinventory-server/plugins"

# ===== DEPRECATED =====

  # Set the proxy cache validity in http headers when sending a file
  PerlSetEnv OCS_OPT_PROXY_REVALIDATE_DELAY 3600
  
  # Deprecated
  PerlSetEnv OCS_OPT_UPDATE 0
  
############ DO NOT MODIFY BELOW ! #######################
  
  # External modules
  PerlModule Apache::DBI
  PerlModule Compress::Zlib
  PerlModule XML::Simple

  # OCS plugins
  PerlModule Apache::Ocsinventory::Plugins::Apache
  PerlModule Apache::Ocsinventory::Plugins
  
  # OCS server
  PerlModule Apache::Ocsinventory
  PerlModule Apache::Ocsinventory::Server::Constants
  PerlModule Apache::Ocsinventory::Server::System
  PerlModule Apache::Ocsinventory::Server::Communication
  PerlModule Apache::Ocsinventory::Server::Inventory
  PerlModule Apache::Ocsinventory::Server::Duplicate

  # OCS Capacities
  PerlModule Apache::Ocsinventory::Server::Capacities::Registry
  PerlModule Apache::Ocsinventory::Server::Capacities::Update
  PerlModule Apache::Ocsinventory::Server::Capacities::Ipdiscover
  PerlModule Apache::Ocsinventory::Server::Capacities::Download
  PerlModule Apache::Ocsinventory::Server::Capacities::Notify
  PerlModule Apache::Ocsinventory::Server::Capacities::Snmp

  # "Virtual" directory for handling OCS Inventory NG agents communications
  <Location /ocsinventory>
    <IfModule mod_authz_core.c>
      # Apache 2.4
      Require all granted
	</IfModule>
	<IfModule !mod_authz_core.c>
      # Apache 2.2
	  order deny,allow
	  allow from all
	</IfModule>
	# If you protect this area you have to deal with http_auth_* agent's parameters
        SetHandler perl-script
        PerlHandler Apache::Ocsinventory
  </Location>

# Web Service for plugin engine
  <Location /plugins>
    <IfModule mod_authz_core.c>
      # Apache 2.4
      Require local
    </IfModule>
    <IfModule !mod_authz_core.c>
      # Apache 2.2
      order deny,allow
      allow from 127.0.0.1
    </IfModule>
    SetHandler perl-script
    PerlHandler Apache::Ocsinventory::Plugins::Apache
  </Location>


  # Web service apache settings
  PerlModule Apache::Ocsinventory::SOAP

  <location /ocsinterface>
        SetHandler perl-script
        PerlHandler "Apache::Ocsinventory::SOAP"
        
        # By default, you can query web service from everywhere with a valid user
		<IfModule mod_authz_core.c>
          # Apache 2.4
          Require all granted
	    </IfModule>
	    <IfModule !mod_authz_core.c>
          Order deny,allow
          Allow from all
		</IfModule>
       	  AuthType Basic
	AuthName "OCS Inventory SOAP Area"
	# Use htpasswd to create/update soap-user (or another granted user)
	AuthUserFile "APACHE_AUTH_USER_FILE"
	<IfModule mod_authz_core.c>
          # Apache 2.4
          Require user "SOAP_USER"
	    </IfModule>
	<IfModule !mod_authz_core.c>
	  require "SOAP_USER"
	    </IfModule>
  </location>
</IfModule>
